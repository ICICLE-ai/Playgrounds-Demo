{
  "version": "1",
  "metadata": {
    "marimo_version": "0.17.0"
  },
  "cells": [
    {
      "id": "Hbol",
      "code_hash": "1d0db38904205bec4d6f6f6a1f6cec3e",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "MJUe",
      "code_hash": "ac808c5dd662120c81a69805e0407b95",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<marimo-sidebar ><div style='display: flex;flex: 1;flex-direction: column;justify-content: flex-start;align-items: normal;flex-wrap: nowrap;gap: 0.5rem'><span class=\"markdown prose dark:prose-invert\"><h1 id=\"icicle-ai-model-data-playgrounds\">ICICLE AI: Model &amp; Data Playgrounds</h1></span><marimo-nav-menu data-items='[{&quot;label&quot;:&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;&lt;iconify-icon icon=&#x27;lucide:home&#x27; inline&gt;&lt;/iconify-icon&gt; Home&lt;/span&gt;&lt;/span&gt;&quot;,&quot;href&quot;:&quot;https://icicle.ai&quot;,&quot;description&quot;:null},{&quot;label&quot;:&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;&lt;iconify-icon icon=&#x27;lucide:doc&#x27; inline&gt;&lt;/iconify-icon&gt; Training Catalog&lt;/span&gt;&lt;/span&gt;&quot;,&quot;href&quot;:&quot;https://icicle-ai.github.io/training-catalog&quot;,&quot;description&quot;:null},{&quot;label&quot;:&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Links&lt;/span&gt;&lt;/span&gt;&quot;,&quot;items&quot;:[{&quot;label&quot;:&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;GitHub&lt;/span&gt;&lt;/span&gt;&quot;,&quot;href&quot;:&quot;https://github.com/icicle-ai&quot;,&quot;description&quot;:null},{&quot;label&quot;:&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Hugging Face&lt;/span&gt;&lt;/span&gt;&quot;,&quot;href&quot;:&quot;https://huggingface.co/icicle-ai&quot;,&quot;description&quot;:null}]}]' data-orientation='&quot;vertical&quot;'></marimo-nav-menu></div></marimo-sidebar>"
          }
        }
      ],
      "console": []
    },
    {
      "id": "vblA",
      "code_hash": "30360414e4f02bfb0b8a54690542e682",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "bkHC",
      "code_hash": "4255443d276cb9223f12123b54486155",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "lEQa",
      "code_hash": "5da44190330d0cf94030bde48fd72609",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "PKri",
      "code_hash": "782e4f40c6822c71a35c97df1061d0ff",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "Xref",
      "code_hash": "23d5320702ee38783dc6f93422bc2fc8",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/plain": ""
          }
        }
      ],
      "console": []
    },
    {
      "id": "SFPL",
      "code_hash": "fe01ce2a7fbac8fafaed7c982a04e229",
      "outputs": [
        {
          "type": "data",
          "data": {
            "text/html": "<div style='display: flex;flex: 1;flex-direction: column;justify-content: flex-start;align-items: normal;flex-wrap: nowrap;gap: 0.5rem'><div style='display: flex;flex: 1;flex-direction: row;justify-content: center;align-items: normal;flex-wrap: nowrap;gap: 0.5rem'><span class=\"markdown prose dark:prose-invert\"><h1 id=\"icicle-model-data-playgrounds-mlhub-patra-demo\">ICICLE Model &amp; Data Playgrounds: MLHub &amp; Patra Demo</h1></span></div><marimo-accordion data-labels='[&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Overview&lt;/span&gt;&lt;/span&gt;&quot;,&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Create Patra Model Card&lt;/span&gt;&lt;/span&gt;&quot;,&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Publish Model Artifacts&lt;/span&gt;&lt;/span&gt;&quot;]' data-multiple='false'><div><span class=\"markdown prose dark:prose-invert\"><span class=\"paragraph\">The ICICLE Model &amp; Data Playgrounds is a platform that allows you to discover and plug-n-play with AI models. \nThis is all possible through the use of,</span>\n<ul>\n<li>Patra Knowledge Graph and Model Cards to collect and store model metadata\nin order to aide the discovery of models. </li>\n<li>The Playgrounds Agent and MLHub to discover models from multple paltform including Patra, Hugging Face, and GitHub.</li>\n<li>MLHub and Patra to publish models to your desired platform.</li>\n<li>Tapis Workflows to Plug-n-Play with these models in a containerized and safe platform.</li>\n</ul>\n<span class=\"paragraph\"><img alt=\"diagram\" src=\"https://raw.githubusercontent.com/ICICLE-ai/Playgrounds-Demo/refs/heads/main/static/ICICLE Model &amp; Data Playgrounds.drawio.png\" /></span></span></div><div><marimo-ui-element object-id='bkHC-40' random-id='4aea007d-7806-803d-94e3-b798a5a2655d'><marimo-form data-initial-value='null' data-label='null' data-element-id='&quot;bkHC-39&quot;' data-loading='false' data-bordered='true' data-submit-button-label='&quot;Submit&quot;' data-submit-button-disabled='false' data-clear-on-submit='false' data-show-clear-button='true' data-clear-button-label='&quot;Clear&quot;' data-should-validate='true'><marimo-ui-element object-id='bkHC-39' random-id='a5b77394-3503-7859-57c1-c335d5e8623f'><marimo-dict data-initial-value='{&quot;model_card&quot;:{&quot;Name&quot;:&quot;&quot;,&quot;Version&quot;:&quot;&quot;,&quot;Short Description&quot;:&quot;&quot;,&quot;Full Description&quot;:&quot;&quot;,&quot;Keywords&quot;:&quot;&quot;,&quot;Author&quot;:&quot;&quot;,&quot;Input Type&quot;:[],&quot;Category&quot;:[]},&quot;ai_model&quot;:{&quot;Name&quot;:&quot;&quot;,&quot;Version&quot;:&quot;&quot;,&quot;Description&quot;:&quot;&quot;,&quot;Owner&quot;:&quot;&quot;,&quot;Location&quot;:&quot;&quot;,&quot;License&quot;:&quot;&quot;,&quot;Framework&quot;:[],&quot;Type&quot;:[],&quot;Test Accuracy&quot;:&quot;&quot;}}' data-label='null' data-element-ids='{&quot;bkHC-28&quot;:&quot;model_card&quot;,&quot;bkHC-38&quot;:&quot;ai_model&quot;}'><span class=\"markdown prose dark:prose-invert\"><h1 id=\"create-submit-a-patra-model-card-to-the-knowledge-graph-kg\">Create &amp; Submit a Patra Model Card to the Knowledge Graph (KG)</h1>\n<span class=\"paragraph\">The Patra Knowledge Base is a system designed to manage and track \nAI/ML models, with the objective of making them more accountable \nand trustworthy. It's a key part of the Patra ModelCards framework,\nwhich aims to improve transparency and accountability in AI/ML \nmodels throughout their entire lifecycle. This includes the model's \ninitial training phase, subsequent deployments, and ongoing usage, \nwhether by the same or different individual.</span>\n<span class=\"paragraph\">Patra Model Cards are detailed records that provide essential \ninformation about each AI/ML model. This information includes \ntechnical details like the model's accuracy and latency, but it \ngoes beyond that to include non-technical aspects such as \nfairness, explainability, and the model's behavior in various \ndeployment environments. This holistic approach is intended to \ncreate a comprehensive understanding of the model's strengths \nand weaknesses, enabling more informed decisions about its use \nand deployment</span>\n<span class=\"paragraph\">For more information visit the <a href=\"https://icicle-ai.github.io/training-catalog/docs/category/patra-kg-2\" rel=\"noopener\" target=\"_blank\">ICICLE AI Training Catalog</a>.</span>\n<hr />\n<span class=\"paragraph\"><strong>Patra Model Card</strong></span>\n<h2 id=\"model-card-information\">Model Card Information</h2>\n<span class=\"paragraph\"><marimo-ui-element object-id='bkHC-28' random-id='2a34634b-b48f-5bc2-a757-1fbcb389e30f'><marimo-dict data-initial-value='{&quot;Name&quot;:&quot;&quot;,&quot;Version&quot;:&quot;&quot;,&quot;Short Description&quot;:&quot;&quot;,&quot;Full Description&quot;:&quot;&quot;,&quot;Keywords&quot;:&quot;&quot;,&quot;Author&quot;:&quot;&quot;,&quot;Input Type&quot;:[],&quot;Category&quot;:[]}' data-label='&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;Model Card&lt;/span&gt;&lt;/span&gt;&quot;' data-element-ids='{&quot;bkHC-20&quot;:&quot;Name&quot;,&quot;bkHC-21&quot;:&quot;Version&quot;,&quot;bkHC-22&quot;:&quot;Short Description&quot;,&quot;bkHC-23&quot;:&quot;Full Description&quot;,&quot;bkHC-24&quot;:&quot;Keywords&quot;,&quot;bkHC-25&quot;:&quot;Author&quot;,&quot;bkHC-26&quot;:&quot;Input Type&quot;,&quot;bkHC-27&quot;:&quot;Category&quot;}'><marimo-json-output data-json-data='{&quot;Name&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-20&#x27; random-id=&#x27;c08f9f20-2236-5a05-ea14-689a192d7720&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The model card name.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Version&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-21&#x27; random-id=&#x27;c222c582-5802-e747-39cd-8341302e555b&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The model card version.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Short Description&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-22&#x27; random-id=&#x27;9f10a369-7ce1-f772-031c-0df066e0a108&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;500 characters max&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-max-length=&#x27;500&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Full Description&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-23&#x27; random-id=&#x27;3b1918e6-6b16-2ca2-981d-547ef26ced4f&#x27;&gt;&lt;marimo-text-area data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;&amp;quot;&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27; data-full-width=&#x27;false&#x27;&gt;&lt;/marimo-text-area&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Keywords&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-24&#x27; random-id=&#x27;484cc46f-9a46-0118-a43b-ff375794da01&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;Keyword for the model card. Ex. &amp;#x27;demo-model, vision, icicle-ai&amp;#x27;&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Author&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-25&#x27; random-id=&#x27;2df96e22-9dd8-f093-56d4-e720d2c67b8f&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The model card author.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Input Type&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-26&#x27; random-id=&#x27;ff838f31-8576-8282-86ad-063c00fadbae&#x27;&gt;&lt;marimo-dropdown data-initial-value=&#x27;[]&#x27; data-label=&#x27;null&#x27; data-options=&#x27;[&amp;quot;Audio&amp;quot;,&amp;quot;Image&amp;quot;,&amp;quot;Tabular&amp;quot;,&amp;quot;Text&amp;quot;,&amp;quot;Video&amp;quot;]&#x27; data-allow-select-none=&#x27;true&#x27; data-searchable=&#x27;false&#x27; data-full-width=&#x27;false&#x27;&gt;&lt;/marimo-dropdown&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Category&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-27&#x27; random-id=&#x27;d3cb38ed-b687-f3ae-d084-dfec08280f5a&#x27;&gt;&lt;marimo-dropdown data-initial-value=&#x27;[]&#x27; data-label=&#x27;null&#x27; data-options=&#x27;[&amp;quot;anomaly detection&amp;quot;,&amp;quot;causal inference&amp;quot;,&amp;quot;classification&amp;quot;,&amp;quot;clustering&amp;quot;,&amp;quot;computer vision&amp;quot;,&amp;quot;density estimation&amp;quot;,&amp;quot;dimensionality reduction&amp;quot;,&amp;quot;embedding learning&amp;quot;,&amp;quot;generative modeling&amp;quot;,&amp;quot;graph learning&amp;quot;,&amp;quot;graph neural networks&amp;quot;,&amp;quot;metric learning&amp;quot;,&amp;quot;multi-label classification&amp;quot;,&amp;quot;multi-task learning&amp;quot;,&amp;quot;natural language processing&amp;quot;,&amp;quot;neural architecture search&amp;quot;,&amp;quot;ranking&amp;quot;,&amp;quot;recommendation systems&amp;quot;,&amp;quot;regression&amp;quot;,&amp;quot;reinforcement learning&amp;quot;,&amp;quot;self-supervised learning&amp;quot;,&amp;quot;semi-supervised learning&amp;quot;,&amp;quot;sequence modeling&amp;quot;,&amp;quot;structured prediction&amp;quot;,&amp;quot;time series forecasting&amp;quot;,&amp;quot;transfer learning&amp;quot;,&amp;quot;unsupervised learning&amp;quot;,&amp;quot;other&amp;quot;]&#x27; data-allow-select-none=&#x27;true&#x27; data-searchable=&#x27;false&#x27; data-full-width=&#x27;false&#x27;&gt;&lt;/marimo-dropdown&gt;&lt;/marimo-ui-element&gt;&quot;}' data-value-types='&quot;python&quot;' data-name='&quot;Model Card&quot;'></marimo-json-output></marimo-dict></marimo-ui-element></span>\n<h2 id=\"ai-model-information\">AI Model Information</h2>\n<span class=\"paragraph\"><marimo-ui-element object-id='bkHC-38' random-id='eca776a0-9a0e-0b52-f958-260962edeaf6'><marimo-dict data-initial-value='{&quot;Name&quot;:&quot;&quot;,&quot;Version&quot;:&quot;&quot;,&quot;Description&quot;:&quot;&quot;,&quot;Owner&quot;:&quot;&quot;,&quot;Location&quot;:&quot;&quot;,&quot;License&quot;:&quot;&quot;,&quot;Framework&quot;:[],&quot;Type&quot;:[],&quot;Test Accuracy&quot;:&quot;&quot;}' data-label='&quot;&lt;span class=&#92;&quot;markdown prose dark:prose-invert&#92;&quot;&gt;&lt;span class=&#92;&quot;paragraph&#92;&quot;&gt;AI Model&lt;/span&gt;&lt;/span&gt;&quot;' data-element-ids='{&quot;bkHC-29&quot;:&quot;Name&quot;,&quot;bkHC-30&quot;:&quot;Version&quot;,&quot;bkHC-31&quot;:&quot;Description&quot;,&quot;bkHC-32&quot;:&quot;Owner&quot;,&quot;bkHC-33&quot;:&quot;Location&quot;,&quot;bkHC-34&quot;:&quot;License&quot;,&quot;bkHC-35&quot;:&quot;Framework&quot;,&quot;bkHC-36&quot;:&quot;Type&quot;,&quot;bkHC-37&quot;:&quot;Test Accuracy&quot;}'><marimo-json-output data-json-data='{&quot;Name&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-29&#x27; random-id=&#x27;de38783f-a6b6-431a-20d9-dc6accf2e12e&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The AI model name.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Version&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-30&#x27; random-id=&#x27;d49c9d5c-56aa-4646-3cf7-6fae2a6490d4&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The AI model version.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Description&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-31&#x27; random-id=&#x27;c3faf56a-7a07-fc09-2745-42eb0729faed&#x27;&gt;&lt;marimo-text-area data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;Description of the AI model.&amp;quot;&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27; data-full-width=&#x27;true&#x27;&gt;&lt;/marimo-text-area&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Owner&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-32&#x27; random-id=&#x27;a9eb3c32-f9ee-0398-5c2c-50c5174efadf&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;The AI model owner.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Location&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-33&#x27; random-id=&#x27;a6be5a13-b0fa-adb0-2f66-8a8dbd07a344&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;Downloadable url to model weights.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;url&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;License&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-34&#x27; random-id=&#x27;51caa9af-ba77-df77-9ac6-4e57cea7997b&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;Url license of the model&amp;quot;&#x27; data-kind=&#x27;&amp;quot;url&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Framework&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-35&#x27; random-id=&#x27;0dc509cb-0f24-350b-6a63-cf7e56260c0d&#x27;&gt;&lt;marimo-dropdown data-initial-value=&#x27;[]&#x27; data-label=&#x27;null&#x27; data-options=&#x27;[&amp;quot;pytorch&amp;quot;,&amp;quot;sklearn&amp;quot;,&amp;quot;tensorflow&amp;quot;,&amp;quot;other&amp;quot;]&#x27; data-allow-select-none=&#x27;true&#x27; data-searchable=&#x27;false&#x27; data-full-width=&#x27;false&#x27;&gt;&lt;/marimo-dropdown&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Type&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-36&#x27; random-id=&#x27;44241407-97ed-019b-7583-3f917075386c&#x27;&gt;&lt;marimo-dropdown data-initial-value=&#x27;[]&#x27; data-label=&#x27;null&#x27; data-options=&#x27;[&amp;quot;cnn&amp;quot;,&amp;quot;decision_tree&amp;quot;,&amp;quot;dnn&amp;quot;,&amp;quot;gnn&amp;quot;,&amp;quot;kmeans&amp;quot;,&amp;quot;llm&amp;quot;,&amp;quot;lstm&amp;quot;,&amp;quot;random_forest&amp;quot;,&amp;quot;rnn&amp;quot;,&amp;quot;svm&amp;quot;,&amp;quot;other&amp;quot;]&#x27; data-allow-select-none=&#x27;true&#x27; data-searchable=&#x27;false&#x27; data-full-width=&#x27;false&#x27;&gt;&lt;/marimo-dropdown&gt;&lt;/marimo-ui-element&gt;&quot;,&quot;Test Accuracy&quot;:&quot;text/html:&lt;marimo-ui-element object-id=&#x27;bkHC-37&#x27; random-id=&#x27;4fe6b072-dd75-2817-65bb-de9325022bae&#x27;&gt;&lt;marimo-text data-initial-value=&#x27;&amp;quot;&amp;quot;&#x27; data-label=&#x27;null&#x27; data-placeholder=&#x27;&amp;quot;Test dataset accuracy.&amp;quot;&#x27; data-kind=&#x27;&amp;quot;text&amp;quot;&#x27; data-full-width=&#x27;true&#x27; data-disabled=&#x27;false&#x27; data-debounce=&#x27;true&#x27;&gt;&lt;/marimo-text&gt;&lt;/marimo-ui-element&gt;&quot;}' data-value-types='&quot;python&quot;' data-name='&quot;AI Model&quot;'></marimo-json-output></marimo-dict></marimo-ui-element></span></span></marimo-dict></marimo-ui-element></marimo-form></marimo-ui-element></div><div><marimo-ui-element object-id='lEQa-11' random-id='3670d7b5-a2f2-1c2f-ffd6-01d6342bf3dc'><marimo-form data-initial-value='null' data-label='null' data-element-id='&quot;lEQa-10&quot;' data-loading='false' data-bordered='true' data-submit-button-label='&quot;Submit&quot;' data-submit-button-disabled='false' data-clear-on-submit='false' data-show-clear-button='false' data-clear-button-label='&quot;Clear&quot;' data-should-validate='true'><marimo-ui-element object-id='lEQa-10' random-id='b4be6d53-1278-5fa2-5819-731fa85f4479'><marimo-dict data-initial-value='{&quot;hf_token&quot;:&quot;&quot;,&quot;repo_name&quot;:&quot;&quot;,&quot;model_artifacts&quot;:[]}' data-label='null' data-element-ids='{&quot;lEQa-7&quot;:&quot;hf_token&quot;,&quot;lEQa-8&quot;:&quot;repo_name&quot;,&quot;lEQa-9&quot;:&quot;model_artifacts&quot;}'><span class=\"markdown prose dark:prose-invert\"><h1 id=\"publish-model-artifacts-with-mlhub-to-hugging-face-hub\">Publish Model Artifacts with MLHub to Hugging Face Hub</h1>\n<span class=\"paragraph\">You can use MLHub to publish your model's artifacts to Hugging Face. \nTo do so you first need to create a zip archive of the artifacts. \nYou can either create an archive using your file browser or you can use the \nfollwing snippets to do so in your Python script.\n<div class=\"language-python codehilite\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">zipfile</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">io</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">BytesIO</span>\n\n<span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">zip_files</span><span class=\"p\">(</span><span class=\"n\">filenames</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Create an in-memory bytes buffer.</span>\n    <span class=\"n\">zip_buffer</span> <span class=\"o\">=</span> <span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Create a ZIP file in memory</span>\n    <span class=\"k\">with</span> <span class=\"n\">zipfile</span><span class=\"o\">.</span><span class=\"n\">ZipFile</span><span class=\"p\">(</span><span class=\"n\">zip_buffer</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">,</span> <span class=\"n\">zipfile</span><span class=\"o\">.</span><span class=\"n\">ZIP_DEFLATED</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"nb\">zip</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Archives file from filesystem</span>\n            <span class=\"nb\">zip</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Set file pointer to the begining of the zip archive and return the bytes value.</span>\n    <span class=\"n\">zip_buffer</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">zip_buffer</span><span class=\"o\">.</span><span class=\"n\">getvalue</span><span class=\"p\">()</span>\n</code></pre></div></span>\n<span class=\"paragraph\">With our artifacts archived in a zip file. We can start using MLHub to \npublish these to our Hugging Face Hub Model Repo.</span>\n<span class=\"paragraph\">MLHub requires us to do this in folowing order,</span>\n<ol>\n<li>Upload our archive to MLHub,\n<div class=\"language-python codehilite\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">httpx</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pydantic_settings</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">BaseSettings</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">PublishingParams</span><span class=\"p\">(</span><span class=\"n\">BaseSettings</span><span class=\"p\">):</span>\n    <span class=\"n\">model_config</span> <span class=\"o\">=</span> <span class=\"n\">SettingsConfigDict</span><span class=\"p\">(</span><span class=\"n\">env_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;*.env*&quot;</span><span class=\"p\">,</span> <span class=\"n\">env_file_encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">hf_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">tapis_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">model_repo</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">PublishingParams</span><span class=\"p\">()</span>\n\n<span class=\"n\">my_model_artifacts</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;patra_model_card.json&quot;</span><span class=\"p\">,</span> <span class=\"c1\"># Patra Model Card we created</span>\n    <span class=\"s2\">&quot;MyModel.pt&quot;</span><span class=\"p\">,</span> <span class=\"c1\"># Saved PyTorch trained weights,</span>\n    <span class=\"s2\">&quot;README.md&quot;</span><span class=\"p\">,</span> <span class=\"c1\"># Repo README,</span>\n    <span class=\"s2\">&quot;MyModel.py&quot;</span><span class=\"p\">,</span> <span class=\"c1\"># MyModel python script</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://dev.develop.tapis.io/v3/mlhub/model-api&quot;</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">httpx</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">{</span><span class=\"s2\"> base_url </span><span class=\"se\">}</span><span class=\"s2\">/artifacts&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">files</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s2\">&quot;file&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;MyModel.zip&quot;</span><span class=\"p\">,</span> <span class=\"n\">zip_files</span><span class=\"p\">(</span><span class=\"n\">my_model_artifacts</span><span class=\"p\">),</span> <span class=\"s2\">&quot;application/zip&quot;</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Raises an exception if it is not a successful response.</span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># If successful, MLHub will return the created UUID for the artifact.</span>\n<span class=\"n\">artifact_uuid</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s2\">&quot;result&quot;</span><span class=\"p\">]</span>\n</code></pre></div></li>\n<li>Create Model Artifact Metadata.</li>\n</ol>\n<ul>\n<li>This meta is used in order for MLHub to provision and deploy your model using a Tapis sytem.\n<div class=\"language-python codehilite\"><pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pydantic</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MLHubArtifactMetadata</span><span class=\"p\">(</span><span class=\"n\">Basemodel</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># Platform Repo Name (ex. for HuggingFace its { account }/{ repo }) REQUIRED FOR MLHUB TO PROBLISH TO DESIRED PLATFORM</span>\n    <span class=\"n\">model_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># The model type (cnn, transformer, llm, etc)</span>\n    <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># The version of the model</span>\n    <span class=\"n\">framework</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># Framework used to create the model. (PyTorch, Tensorflow, etc)</span>\n    <span class=\"n\">license</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"c1\"># Hyperlink to the license to use the model.</span>\n\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">MLHubArtifactMetadata</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">model_repo</span><span class=\"p\">,</span> <span class=\"c1\"># Taken from the PublishParams</span>\n    <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;CNN&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">framework</span><span class=\"o\">=</span><span class=\"s2\">&quot;PyTorch&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://huggingface.co/icicle-ai/MyModel/blob/main/LICENSE&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">reponse</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">{</span><span class=\"s2\"> base_url </span><span class=\"se\">}</span><span class=\"s2\">/artifacts/</span><span class=\"se\">{</span><span class=\"s2\"> artifact_id </span><span class=\"se\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">model_dump</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Raise to see if any issues encountered. </span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n</code></pre></div></li>\n</ul>\n<ol start=\"3\">\n<li>With the artifacts and their metadata successfully create and \ningested into MLHub, we can use MLHub to publish it to our desired platform.\n<div class=\"language-python codehilite\"><pre><span></span><code><span class=\"c1\"># Publishing to Hugging Face Hub</span>\n\n<span class=\"n\">reponse</span> <span class=\"o\">=</span> <span class=\"n\">httpx</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"se\">{</span><span class=\"s2\"> base_url </span><span class=\"se\">}</span><span class=\"s2\">/artifacts/</span><span class=\"se\">{</span><span class=\"s2\"> artifact_id </span><span class=\"se\">}</span><span class=\"s2\">/publications&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s2\">&quot;target_platform&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;huggingface&quot;</span> <span class=\"p\">},</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span> <span class=\"s2\">&quot;Authorization&quot;</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Bearer </span><span class=\"se\">{</span><span class=\"s2\"> config.hf_token </span><span class=\"se\">}</span><span class=\"s2\">&quot;</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Raise to see if any issues encountered. </span>\n<span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n</code></pre></div></li>\n</ol>\n<hr />\n<span class=\"paragraph\"><strong>Hugging Face Hub Token</strong></span>\n<span class=\"paragraph\"><marimo-ui-element object-id='lEQa-7' random-id='a318f192-e4de-8686-8ebf-4e8f61674bab'><marimo-text data-initial-value='&quot;&quot;' data-label='null' data-placeholder='&quot;HF Token...&quot;' data-kind='&quot;password&quot;' data-full-width='true' data-disabled='false' data-debounce='true'></marimo-text></marimo-ui-element></span>\n<span class=\"paragraph\"><strong>Model Repo Name</strong></span>\n<span class=\"paragraph\"><marimo-ui-element object-id='lEQa-8' random-id='f5beefd4-e3be-11f1-c811-61161dfd50f8'><marimo-text data-initial-value='&quot;&quot;' data-label='null' data-placeholder='&quot;ex: {account-name}/{repo-name}&quot;' data-kind='&quot;text&quot;' data-full-width='true' data-disabled='false' data-debounce='true'></marimo-text></marimo-ui-element></span>\n<span class=\"paragraph\"><strong>Model Artifacts</strong>\n<marimo-ui-element object-id='lEQa-9' random-id='03557c2c-d65a-88f7-6ccf-74d8634ef1e9'><marimo-file data-initial-value='[]' data-label='null' data-filetypes='[]' data-multiple='true' data-kind='&quot;button&quot;' data-max_size='1000000000'></marimo-file></marimo-ui-element></span></span></marimo-dict></marimo-ui-element></marimo-form></marimo-ui-element></div></marimo-accordion><marimo-ui-element object-id='PKri-0' random-id='ff121716-3aea-5f9a-052f-de42cb99de34'><marimo-chatbot data-initial-value='{&quot;messages&quot;:[]}' data-label='null' data-prompts='[&quot;Hello ICICLE, how are you?&quot;,&quot;My name is Carlos and I am an an Animal Ecologist. I am interested in using AI to help me with my research.&quot;,&quot;I am currently studying animal behaviors through the use of camera trap images that I have deployed.&quot;]' data-show-configuration-controls='false' data-config='{&quot;max_tokens&quot;:100,&quot;temperature&quot;:0.5,&quot;top_p&quot;:1,&quot;top_k&quot;:40,&quot;frequency_penalty&quot;:0,&quot;presence_penalty&quot;:0}' data-allow-attachments='false' data-max-height='500'></marimo-chatbot></marimo-ui-element></div>"
          }
        }
      ],
      "console": []
    }
  ]
}